package com.aistar.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DecorationProgressExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public DecorationProgressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDecorationIdIsNull() {
            addCriterion("decoration_id is null");
            return (Criteria) this;
        }

        public Criteria andDecorationIdIsNotNull() {
            addCriterion("decoration_id is not null");
            return (Criteria) this;
        }

        public Criteria andDecorationIdEqualTo(Integer value) {
            addCriterion("decoration_id =", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdNotEqualTo(Integer value) {
            addCriterion("decoration_id <>", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdGreaterThan(Integer value) {
            addCriterion("decoration_id >", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("decoration_id >=", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdLessThan(Integer value) {
            addCriterion("decoration_id <", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdLessThanOrEqualTo(Integer value) {
            addCriterion("decoration_id <=", value, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdIn(List<Integer> values) {
            addCriterion("decoration_id in", values, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdNotIn(List<Integer> values) {
            addCriterion("decoration_id not in", values, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdBetween(Integer value1, Integer value2) {
            addCriterion("decoration_id between", value1, value2, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationIdNotBetween(Integer value1, Integer value2) {
            addCriterion("decoration_id not between", value1, value2, "decorationId");
            return (Criteria) this;
        }

        public Criteria andDecorationNameIsNull() {
            addCriterion("decoration_name is null");
            return (Criteria) this;
        }

        public Criteria andDecorationNameIsNotNull() {
            addCriterion("decoration_name is not null");
            return (Criteria) this;
        }

        public Criteria andDecorationNameEqualTo(String value) {
            addCriterion("decoration_name =", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameNotEqualTo(String value) {
            addCriterion("decoration_name <>", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameGreaterThan(String value) {
            addCriterion("decoration_name >", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameGreaterThanOrEqualTo(String value) {
            addCriterion("decoration_name >=", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameLessThan(String value) {
            addCriterion("decoration_name <", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameLessThanOrEqualTo(String value) {
            addCriterion("decoration_name <=", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameLike(String value) {
            addCriterion("decoration_name like", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameNotLike(String value) {
            addCriterion("decoration_name not like", value, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameIn(List<String> values) {
            addCriterion("decoration_name in", values, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameNotIn(List<String> values) {
            addCriterion("decoration_name not in", values, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameBetween(String value1, String value2) {
            addCriterion("decoration_name between", value1, value2, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDecorationNameNotBetween(String value1, String value2) {
            addCriterion("decoration_name not between", value1, value2, "decorationName");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsIsNull() {
            addCriterion("dprogress_details is null");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsIsNotNull() {
            addCriterion("dprogress_details is not null");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsEqualTo(String value) {
            addCriterion("dprogress_details =", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsNotEqualTo(String value) {
            addCriterion("dprogress_details <>", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsGreaterThan(String value) {
            addCriterion("dprogress_details >", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsGreaterThanOrEqualTo(String value) {
            addCriterion("dprogress_details >=", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsLessThan(String value) {
            addCriterion("dprogress_details <", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsLessThanOrEqualTo(String value) {
            addCriterion("dprogress_details <=", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsLike(String value) {
            addCriterion("dprogress_details like", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsNotLike(String value) {
            addCriterion("dprogress_details not like", value, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsIn(List<String> values) {
            addCriterion("dprogress_details in", values, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsNotIn(List<String> values) {
            addCriterion("dprogress_details not in", values, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsBetween(String value1, String value2) {
            addCriterion("dprogress_details between", value1, value2, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDprogressDetailsNotBetween(String value1, String value2) {
            addCriterion("dprogress_details not between", value1, value2, "dprogressDetails");
            return (Criteria) this;
        }

        public Criteria andDecorationDateIsNull() {
            addCriterion("decoration_date is null");
            return (Criteria) this;
        }

        public Criteria andDecorationDateIsNotNull() {
            addCriterion("decoration_date is not null");
            return (Criteria) this;
        }

        public Criteria andDecorationDateEqualTo(Date value) {
            addCriterionForJDBCDate("decoration_date =", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("decoration_date <>", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("decoration_date >", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("decoration_date >=", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateLessThan(Date value) {
            addCriterionForJDBCDate("decoration_date <", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("decoration_date <=", value, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateIn(List<Date> values) {
            addCriterionForJDBCDate("decoration_date in", values, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("decoration_date not in", values, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("decoration_date between", value1, value2, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("decoration_date not between", value1, value2, "decorationDate");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusIsNull() {
            addCriterion("decoration_status is null");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusIsNotNull() {
            addCriterion("decoration_status is not null");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusEqualTo(Integer value) {
            addCriterion("decoration_status =", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusNotEqualTo(Integer value) {
            addCriterion("decoration_status <>", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusGreaterThan(Integer value) {
            addCriterion("decoration_status >", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("decoration_status >=", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusLessThan(Integer value) {
            addCriterion("decoration_status <", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusLessThanOrEqualTo(Integer value) {
            addCriterion("decoration_status <=", value, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusIn(List<Integer> values) {
            addCriterion("decoration_status in", values, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusNotIn(List<Integer> values) {
            addCriterion("decoration_status not in", values, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusBetween(Integer value1, Integer value2) {
            addCriterion("decoration_status between", value1, value2, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andDecorationStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("decoration_status not between", value1, value2, "decorationStatus");
            return (Criteria) this;
        }

        public Criteria andOthers1IsNull() {
            addCriterion("others1 is null");
            return (Criteria) this;
        }

        public Criteria andOthers1IsNotNull() {
            addCriterion("others1 is not null");
            return (Criteria) this;
        }

        public Criteria andOthers1EqualTo(String value) {
            addCriterion("others1 =", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1NotEqualTo(String value) {
            addCriterion("others1 <>", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1GreaterThan(String value) {
            addCriterion("others1 >", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1GreaterThanOrEqualTo(String value) {
            addCriterion("others1 >=", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1LessThan(String value) {
            addCriterion("others1 <", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1LessThanOrEqualTo(String value) {
            addCriterion("others1 <=", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1Like(String value) {
            addCriterion("others1 like", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1NotLike(String value) {
            addCriterion("others1 not like", value, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1In(List<String> values) {
            addCriterion("others1 in", values, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1NotIn(List<String> values) {
            addCriterion("others1 not in", values, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1Between(String value1, String value2) {
            addCriterion("others1 between", value1, value2, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers1NotBetween(String value1, String value2) {
            addCriterion("others1 not between", value1, value2, "others1");
            return (Criteria) this;
        }

        public Criteria andOthers2IsNull() {
            addCriterion("others2 is null");
            return (Criteria) this;
        }

        public Criteria andOthers2IsNotNull() {
            addCriterion("others2 is not null");
            return (Criteria) this;
        }

        public Criteria andOthers2EqualTo(String value) {
            addCriterion("others2 =", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2NotEqualTo(String value) {
            addCriterion("others2 <>", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2GreaterThan(String value) {
            addCriterion("others2 >", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2GreaterThanOrEqualTo(String value) {
            addCriterion("others2 >=", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2LessThan(String value) {
            addCriterion("others2 <", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2LessThanOrEqualTo(String value) {
            addCriterion("others2 <=", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2Like(String value) {
            addCriterion("others2 like", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2NotLike(String value) {
            addCriterion("others2 not like", value, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2In(List<String> values) {
            addCriterion("others2 in", values, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2NotIn(List<String> values) {
            addCriterion("others2 not in", values, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2Between(String value1, String value2) {
            addCriterion("others2 between", value1, value2, "others2");
            return (Criteria) this;
        }

        public Criteria andOthers2NotBetween(String value1, String value2) {
            addCriterion("others2 not between", value1, value2, "others2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table decoration_progress
     *
     * @mbggenerated do_not_delete_during_merge Sat Sep 28 16:46:13 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table decoration_progress
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}