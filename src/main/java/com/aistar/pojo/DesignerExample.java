package com.aistar.pojo;

import java.util.ArrayList;
import java.util.List;

public class DesignerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public DesignerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDesignerIdIsNull() {
            addCriterion("designer_id is null");
            return (Criteria) this;
        }

        public Criteria andDesignerIdIsNotNull() {
            addCriterion("designer_id is not null");
            return (Criteria) this;
        }

        public Criteria andDesignerIdEqualTo(Integer value) {
            addCriterion("designer_id =", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdNotEqualTo(Integer value) {
            addCriterion("designer_id <>", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdGreaterThan(Integer value) {
            addCriterion("designer_id >", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("designer_id >=", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdLessThan(Integer value) {
            addCriterion("designer_id <", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdLessThanOrEqualTo(Integer value) {
            addCriterion("designer_id <=", value, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdIn(List<Integer> values) {
            addCriterion("designer_id in", values, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdNotIn(List<Integer> values) {
            addCriterion("designer_id not in", values, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdBetween(Integer value1, Integer value2) {
            addCriterion("designer_id between", value1, value2, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerIdNotBetween(Integer value1, Integer value2) {
            addCriterion("designer_id not between", value1, value2, "designerId");
            return (Criteria) this;
        }

        public Criteria andDesignerNameIsNull() {
            addCriterion("designer_name is null");
            return (Criteria) this;
        }

        public Criteria andDesignerNameIsNotNull() {
            addCriterion("designer_name is not null");
            return (Criteria) this;
        }

        public Criteria andDesignerNameEqualTo(String value) {
            addCriterion("designer_name =", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameNotEqualTo(String value) {
            addCriterion("designer_name <>", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameGreaterThan(String value) {
            addCriterion("designer_name >", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameGreaterThanOrEqualTo(String value) {
            addCriterion("designer_name >=", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameLessThan(String value) {
            addCriterion("designer_name <", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameLessThanOrEqualTo(String value) {
            addCriterion("designer_name <=", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameLike(String value) {
            addCriterion("designer_name like", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameNotLike(String value) {
            addCriterion("designer_name not like", value, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameIn(List<String> values) {
            addCriterion("designer_name in", values, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameNotIn(List<String> values) {
            addCriterion("designer_name not in", values, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameBetween(String value1, String value2) {
            addCriterion("designer_name between", value1, value2, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerNameNotBetween(String value1, String value2) {
            addCriterion("designer_name not between", value1, value2, "designerName");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoIsNull() {
            addCriterion("designer_telno is null");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoIsNotNull() {
            addCriterion("designer_telno is not null");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoEqualTo(Integer value) {
            addCriterion("designer_telno =", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoNotEqualTo(Integer value) {
            addCriterion("designer_telno <>", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoGreaterThan(Integer value) {
            addCriterion("designer_telno >", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("designer_telno >=", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoLessThan(Integer value) {
            addCriterion("designer_telno <", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoLessThanOrEqualTo(Integer value) {
            addCriterion("designer_telno <=", value, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoIn(List<Integer> values) {
            addCriterion("designer_telno in", values, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoNotIn(List<Integer> values) {
            addCriterion("designer_telno not in", values, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoBetween(Integer value1, Integer value2) {
            addCriterion("designer_telno between", value1, value2, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerTelnoNotBetween(Integer value1, Integer value2) {
            addCriterion("designer_telno not between", value1, value2, "designerTelno");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoIsNull() {
            addCriterion("designer_photo is null");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoIsNotNull() {
            addCriterion("designer_photo is not null");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoEqualTo(String value) {
            addCriterion("designer_photo =", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoNotEqualTo(String value) {
            addCriterion("designer_photo <>", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoGreaterThan(String value) {
            addCriterion("designer_photo >", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoGreaterThanOrEqualTo(String value) {
            addCriterion("designer_photo >=", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoLessThan(String value) {
            addCriterion("designer_photo <", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoLessThanOrEqualTo(String value) {
            addCriterion("designer_photo <=", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoLike(String value) {
            addCriterion("designer_photo like", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoNotLike(String value) {
            addCriterion("designer_photo not like", value, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoIn(List<String> values) {
            addCriterion("designer_photo in", values, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoNotIn(List<String> values) {
            addCriterion("designer_photo not in", values, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoBetween(String value1, String value2) {
            addCriterion("designer_photo between", value1, value2, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerPhotoNotBetween(String value1, String value2) {
            addCriterion("designer_photo not between", value1, value2, "designerPhoto");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusIsNull() {
            addCriterion("designer_status is null");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusIsNotNull() {
            addCriterion("designer_status is not null");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusEqualTo(Integer value) {
            addCriterion("designer_status =", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusNotEqualTo(Integer value) {
            addCriterion("designer_status <>", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusGreaterThan(Integer value) {
            addCriterion("designer_status >", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("designer_status >=", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusLessThan(Integer value) {
            addCriterion("designer_status <", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusLessThanOrEqualTo(Integer value) {
            addCriterion("designer_status <=", value, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusIn(List<Integer> values) {
            addCriterion("designer_status in", values, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusNotIn(List<Integer> values) {
            addCriterion("designer_status not in", values, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusBetween(Integer value1, Integer value2) {
            addCriterion("designer_status between", value1, value2, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andDesignerStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("designer_status not between", value1, value2, "designerStatus");
            return (Criteria) this;
        }

        public Criteria andOther1IsNull() {
            addCriterion("other1 is null");
            return (Criteria) this;
        }

        public Criteria andOther1IsNotNull() {
            addCriterion("other1 is not null");
            return (Criteria) this;
        }

        public Criteria andOther1EqualTo(String value) {
            addCriterion("other1 =", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1NotEqualTo(String value) {
            addCriterion("other1 <>", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1GreaterThan(String value) {
            addCriterion("other1 >", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1GreaterThanOrEqualTo(String value) {
            addCriterion("other1 >=", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1LessThan(String value) {
            addCriterion("other1 <", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1LessThanOrEqualTo(String value) {
            addCriterion("other1 <=", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1Like(String value) {
            addCriterion("other1 like", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1NotLike(String value) {
            addCriterion("other1 not like", value, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1In(List<String> values) {
            addCriterion("other1 in", values, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1NotIn(List<String> values) {
            addCriterion("other1 not in", values, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1Between(String value1, String value2) {
            addCriterion("other1 between", value1, value2, "other1");
            return (Criteria) this;
        }

        public Criteria andOther1NotBetween(String value1, String value2) {
            addCriterion("other1 not between", value1, value2, "other1");
            return (Criteria) this;
        }

        public Criteria andOther2IsNull() {
            addCriterion("other2 is null");
            return (Criteria) this;
        }

        public Criteria andOther2IsNotNull() {
            addCriterion("other2 is not null");
            return (Criteria) this;
        }

        public Criteria andOther2EqualTo(String value) {
            addCriterion("other2 =", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2NotEqualTo(String value) {
            addCriterion("other2 <>", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2GreaterThan(String value) {
            addCriterion("other2 >", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2GreaterThanOrEqualTo(String value) {
            addCriterion("other2 >=", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2LessThan(String value) {
            addCriterion("other2 <", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2LessThanOrEqualTo(String value) {
            addCriterion("other2 <=", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2Like(String value) {
            addCriterion("other2 like", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2NotLike(String value) {
            addCriterion("other2 not like", value, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2In(List<String> values) {
            addCriterion("other2 in", values, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2NotIn(List<String> values) {
            addCriterion("other2 not in", values, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2Between(String value1, String value2) {
            addCriterion("other2 between", value1, value2, "other2");
            return (Criteria) this;
        }

        public Criteria andOther2NotBetween(String value1, String value2) {
            addCriterion("other2 not between", value1, value2, "other2");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table designer
     *
     * @mbggenerated do_not_delete_during_merge Sat Sep 28 16:46:13 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table designer
     *
     * @mbggenerated Sat Sep 28 16:46:13 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}